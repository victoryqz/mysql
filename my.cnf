[mysqld]
port 				= 3306
basedir 			= /usr/local/mysql 
datadir 			= /data01/mysql/8.0.22/data
max_connections 		= 1024
character-set-server 		= utf8mb4
default-storage-engine 		= INNODB
server_id 			= 166
socket 				= /data01/mysql/8.0.22/mysql.sock
pid-file 			= /data01/mysql/8.0.22/mysql.pid

slow_query_log 			= ON
slow_query_log_file 		= /data01/mysql/8.0.22/logs/slows.log
slow_launch_time		= 0

long_query_time 		= 10
log-error 			= /data01/mysql/8.0.22/logs/errors.log
user 				= mysql 
default_authentication_plugin 	= mysql_native_password

# 每次事务 redo log 都直接持久化到磁盘，保证异常重启数据不丢失
innodb_flush_log_at_trx_commit	= 1
# redo log 组里有4个文件
innodb_log_files_in_group	= 4 
# redo 组里文件大小 1 G
innodb_log_file_size		= 1G
innodb_log_group_home_dir       = /data01/mysql/8.0.22/logs


# 每次事务 bin log 都直接持久化到磁盘，保证异常重启 binglog 不丢失。
#（用binlog做主从复制或服务器崩溃后数据恢复，不丢失数据）
sync_binlog			= 1
log-bin 			= /data01/mysql/8.0.22/logs/binlog-apollo

autocommit			= 1

# 开启死锁检测,每当一个事务被锁住的时候，就要看看它锁依赖的线程有没有被别人锁住。
# 时间复杂度O（N）操作
innodb_deadlock_detect		= ON

# 当出现死锁后，第一个被锁住的线程要过50S才超时退出
innodb_lock_wait_timeout	= 50

# 如果数据页在内存中就直接更新
# 如果数据页不在内存中，在不影响数据一致性的前提下，InnoDB会将这些更新操作缓存在change buffer中
# 这样就不用从磁盘中读取这个数据页了
# 在下次查询需要访问这个数据页的时候，将数据页读入内存，然后执行change buffer中与这个页有关的操作
# 将change buffer中的操作应用到原数据页的过程称为merge
# 如果先将更新操作记录在change buffer中，减少读磁盘，更新语句速度将得到明显提升
# 适合写多读少的业务,账单类、日志类应用
innodb_change_buffer_max_size	= 35

# 每个 InnoDB 表数据存储在一个以 .ibd 为后缀的文件中。
innodb_file_per_table		= on

# 磁盘的IOPS，InnoDB全力刷脏页可以刷多快
# 通过下面语句测试
# fio -filename=$filename -direct=1 -iodepth 1 -thread -rw=randrw -ioengine=psync -bs=16k -size=500M -numjobs=10 -runtime=10 -group_reporting -name=mytest 
innodb_io_capacity		= 88

# 脏页比例上限
innodb_max_dirty_pages_pct	= 75

# 排序缓存大小，如果需要排序的数据大于缓存大小，就使用临时文件，采用归档排序
sort_buffer_size		= 262144

# 在排序过程中sort_buffer里字段长度大于或小于该参数，采用不同算法
max_length_for_sort_data 	= 16

# 查询造成阻塞的process id
# 方便查找死锁，但是会有10%的性能损失
# select blocking_pid from sys.schema_table_lock_waits;
performance_schema		= on
 
 
[mysql]
default-character-set 		= utf8mb4
 
[client]
port 				= 3306
socket 				= /data01/mysql/8.0.22/mysql.sock
default-character-set 		= utf8mb4
